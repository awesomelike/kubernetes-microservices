apiVersion: apps/v1
kind: Deployment
metadata:
  name: rest-proxy
  labels:
    app: rest-proxy
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: rest-proxy
  template:
    metadata:
      labels:
        app: rest-proxy
    spec:
      containers:
      - name: kubmic-proxy
        image: awesomelike/kubmic-restproxy:1
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: "50m"
            memory: "50Mi"
          limits:
            cpu: "100m"
            memory: "256Mi"
        ports:
        - containerPort: 3000
        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
        env:
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: rest-proxy-configmap
              key: PORT
        - name: USER_GRPC_HOST
          valueFrom:
            configMapKeyRef:
              name: rest-proxy-configmap
              key: USER_SERVICE
        - name: USER_GRPC_PORT
          valueFrom:
            configMapKeyRef:
              name: users-configmap
              key: GRPC_PORT
        - name: POST_GRPC_HOST
          valueFrom:
            configMapKeyRef:
              name: rest-proxy-configmap
              key: POST_SERVICE
        - name: POST_GRPC_PORT
          valueFrom:
            configMapKeyRef:
              name: posts-configmap
              key: GRPC_PORT
---
apiVersion: v1
kind: Service
metadata:
  name: rest-proxy-service
spec:
  type: LoadBalancer
  selector:
    app: rest-proxy
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000

